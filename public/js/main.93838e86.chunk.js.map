{"version":3,"sources":["worldtime.js","form.jsx","clock.jsx","App.js","serviceWorker.js","index.js"],"names":["TIMEZONES","LOCAL_TIMEZONE","Intl","DateTimeFormat","resolvedOptions","timeZone","Form","props","selector","useRef","ref","defaultValue","map","str","key","value","className","onClick","onClickAddTimerHandler","current","onSaveDefaultTimezone","Clock","defaultTimerClassName","nameDefaultZone","timezone","defaultTileClassName","appDate","toLocaleTimeString","onClickRemoveHandler","idInstance","App","storageNameZones","storageNameDefaultZone","state","data","Map","Date","defaultZone","localStorage","getItem","init","bind","this","timerID","setInterval","tick","clearInterval","setState","name","setItem","Array","from","values","hours","nameTimeZone","id","storageData","timezonesArray","split","timezonesMap","forEach","instance","newInstance","set","length","result","characters","charactersLength","i","charAt","Math","floor","random","makeId","storageSave","delete","join","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wMACaA,EAAY,CACrB,iBACA,eACA,iBACA,gBACA,eACA,oBACA,eACA,kBACA,sBACA,cACA,kBACA,eACA,gBACA,kBACA,iBACA,kBACA,kBACA,iBACA,eACA,kBACA,eACA,oBACA,oBACA,iCACA,8BACA,4BACA,0BACA,6BACA,4BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,mBACA,mBACA,gBACA,yBACA,mBACA,gBACA,iBACA,uBACA,oBACA,iBACA,gBACA,wBACA,uBACA,iBACA,kBACA,kBACA,kBACA,oBACA,qBACA,kBACA,iBACA,kBACA,uBACA,iBACA,uBACA,iBACA,kBACA,mBACA,mBACA,sBACA,sBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,iBACA,kBACA,iBACA,qBACA,+BACA,uBACA,0BACA,6BACA,4BACA,wBACA,4BACA,0BACA,iBACA,kBACA,kBACA,iBACA,8BACA,8BACA,iBACA,eACA,sBACA,iBACA,kBACA,iBACA,qBACA,oBACA,mBACA,oBACA,iBACA,qBACA,sBACA,mBACA,kBACA,oBACA,qBACA,iBACA,mBACA,kBACA,eACA,kBACA,8BACA,8BACA,iCACA,eACA,kBACA,iBACA,sBACA,qBACA,kBACA,yBACA,wBACA,sBACA,sBACA,uBACA,sBACA,uBACA,iBACA,iBACA,mBACA,qBACA,mBACA,mBACA,wBACA,oBACA,uBACA,gBACA,mBACA,wBACA,sBACA,gBACA,sBACA,kBACA,kBACA,oBACA,qBACA,mBACA,kBACA,sBACA,mBACA,mBACA,4BACA,uBACA,oBACA,oBACA,qBACA,mBACA,mBACA,oBACA,cACA,aACA,cACA,aACA,cACA,gBACA,cACA,eACA,YACA,eACA,eACA,cACA,eACA,cACA,aACA,kBACA,eACA,gBACA,aACA,YACA,aACA,gBACA,iBACA,YACA,cACA,mBACA,iBACA,YACA,eACA,eACA,gBACA,iBACA,aACA,iBACA,eACA,iBACA,gBACA,eACA,mBACA,oBACA,eACA,aACA,eACA,gBACA,cACA,eACA,oBACA,mBACA,YACA,YACA,iBACA,iBACA,aACA,gBACA,iBACA,cACA,gBACA,iBACA,aACA,gBACA,iBACA,qBACA,cACA,gBACA,eACA,cACA,eACA,aACA,aACA,mBACA,cACA,gBACA,mBACA,eACA,cACA,qBACA,eACA,kBACA,mBACA,kBACA,sBACA,iBACA,mBACA,qBACA,yBACA,mBACA,qBACA,qBACA,wBACA,mBACA,mBACA,kBACA,mBACA,qBACA,sBACA,sBACA,kBACA,mBACA,MACA,UACA,MACA,MACA,UACA,UACA,YACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,mBACA,iBACA,mBACA,gBACA,kBACA,gBACA,kBACA,mBACA,kBACA,kBACA,oBACA,gBACA,mBACA,kBACA,kBACA,qBACA,cACA,eACA,gBACA,gBACA,oBACA,gBACA,eACA,eACA,gBACA,gBACA,cACA,eACA,gBACA,cACA,cACA,gBACA,iBACA,oBACA,eACA,mBACA,iBACA,gBACA,mBACA,kBACA,gBACA,iBACA,mBACA,gBACA,oBACA,gBACA,MACA,gBACA,mBACA,eACA,mBACA,cACA,kBACA,mBACA,iBACA,MACA,MACA,UACA,UACA,eACA,mBACA,uBACA,kBACA,gBACA,iBACA,gBACA,oBACA,kBACA,eACA,mBACA,oBACA,kBACA,sBACA,eACA,mBACA,qBACA,iBACA,oBACA,iBACA,oBACA,gBACA,eACA,kBACA,iBACA,oBACA,gBACA,mBACA,kBACA,uBACA,oBACA,iBACA,iBACA,oBACA,eACA,iBACA,OAGUC,EAAiBC,KAAKC,iBAAiBC,kBAAkBC,SCpYhE,SAASC,EAAKC,GACjB,IAAMC,EAAWC,iBAAO,MAExB,OACI,oCACI,4BAAQC,IAAMF,EACNG,aAAeV,GACtBD,EAAUY,KAAI,SAAAC,GAAG,OACd,4BAAQC,IAAKD,EAAKE,MAA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","file":"static/js/main.93838e86.chunk.js","sourcesContent":["// http://worldtimeapi.org/api/timezone, http://worldtimeapi.org/api/timezone/Europe/Ulyanovsk\r\nexport const TIMEZONES = [\r\n    \"Africa/Abidjan\",\r\n    \"Africa/Accra\",\r\n    \"Africa/Algiers\",\r\n    \"Africa/Bissau\",\r\n    \"Africa/Cairo\",\r\n    \"Africa/Casablanca\",\r\n    \"Africa/Ceuta\",\r\n    \"Africa/El_Aaiun\",\r\n    \"Africa/Johannesburg\",\r\n    \"Africa/Juba\",\r\n    \"Africa/Khartoum\",\r\n    \"Africa/Lagos\",\r\n    \"Africa/Maputo\",\r\n    \"Africa/Monrovia\",\r\n    \"Africa/Nairobi\",\r\n    \"Africa/Ndjamena\",\r\n    \"Africa/Sao_Tome\",\r\n    \"Africa/Tripoli\",\r\n    \"Africa/Tunis\",\r\n    \"Africa/Windhoek\",\r\n    \"America/Adak\",\r\n    \"America/Anchorage\",\r\n    \"America/Araguaina\",\r\n    \"America/Argentina/Buenos_Aires\",\r\n    \"America/Argentina/Catamarca\",\r\n    \"America/Argentina/Cordoba\",\r\n    \"America/Argentina/Jujuy\",\r\n    \"America/Argentina/La_Rioja\",\r\n    \"America/Argentina/Mendoza\",\r\n    \"America/Argentina/Rio_Gallegos\",\r\n    \"America/Argentina/Salta\",\r\n    \"America/Argentina/San_Juan\",\r\n    \"America/Argentina/San_Luis\",\r\n    \"America/Argentina/Tucuman\",\r\n    \"America/Argentina/Ushuaia\",\r\n    \"America/Asuncion\",\r\n    \"America/Atikokan\",\r\n    \"America/Bahia\",\r\n    \"America/Bahia_Banderas\",\r\n    \"America/Barbados\",\r\n    \"America/Belem\",\r\n    \"America/Belize\",\r\n    \"America/Blanc-Sablon\",\r\n    \"America/Boa_Vista\",\r\n    \"America/Bogota\",\r\n    \"America/Boise\",\r\n    \"America/Cambridge_Bay\",\r\n    \"America/Campo_Grande\",\r\n    \"America/Cancun\",\r\n    \"America/Caracas\",\r\n    \"America/Cayenne\",\r\n    \"America/Chicago\",\r\n    \"America/Chihuahua\",\r\n    \"America/Costa_Rica\",\r\n    \"America/Creston\",\r\n    \"America/Cuiaba\",\r\n    \"America/Curacao\",\r\n    \"America/Danmarkshavn\",\r\n    \"America/Dawson\",\r\n    \"America/Dawson_Creek\",\r\n    \"America/Denver\",\r\n    \"America/Detroit\",\r\n    \"America/Edmonton\",\r\n    \"America/Eirunepe\",\r\n    \"America/El_Salvador\",\r\n    \"America/Fort_Nelson\",\r\n    \"America/Fortaleza\",\r\n    \"America/Glace_Bay\",\r\n    \"America/Goose_Bay\",\r\n    \"America/Grand_Turk\",\r\n    \"America/Guatemala\",\r\n    \"America/Guayaquil\",\r\n    \"America/Guyana\",\r\n    \"America/Halifax\",\r\n    \"America/Havana\",\r\n    \"America/Hermosillo\",\r\n    \"America/Indiana/Indianapolis\",\r\n    \"America/Indiana/Knox\",\r\n    \"America/Indiana/Marengo\",\r\n    \"America/Indiana/Petersburg\",\r\n    \"America/Indiana/Tell_City\",\r\n    \"America/Indiana/Vevay\",\r\n    \"America/Indiana/Vincennes\",\r\n    \"America/Indiana/Winamac\",\r\n    \"America/Inuvik\",\r\n    \"America/Iqaluit\",\r\n    \"America/Jamaica\",\r\n    \"America/Juneau\",\r\n    \"America/Kentucky/Louisville\",\r\n    \"America/Kentucky/Monticello\",\r\n    \"America/La_Paz\",\r\n    \"America/Lima\",\r\n    \"America/Los_Angeles\",\r\n    \"America/Maceio\",\r\n    \"America/Managua\",\r\n    \"America/Manaus\",\r\n    \"America/Martinique\",\r\n    \"America/Matamoros\",\r\n    \"America/Mazatlan\",\r\n    \"America/Menominee\",\r\n    \"America/Merida\",\r\n    \"America/Metlakatla\",\r\n    \"America/Mexico_City\",\r\n    \"America/Miquelon\",\r\n    \"America/Moncton\",\r\n    \"America/Monterrey\",\r\n    \"America/Montevideo\",\r\n    \"America/Nassau\",\r\n    \"America/New_York\",\r\n    \"America/Nipigon\",\r\n    \"America/Nome\",\r\n    \"America/Noronha\",\r\n    \"America/North_Dakota/Beulah\",\r\n    \"America/North_Dakota/Center\",\r\n    \"America/North_Dakota/New_Salem\",\r\n    \"America/Nuuk\",\r\n    \"America/Ojinaga\",\r\n    \"America/Panama\",\r\n    \"America/Pangnirtung\",\r\n    \"America/Paramaribo\",\r\n    \"America/Phoenix\",\r\n    \"America/Port-au-Prince\",\r\n    \"America/Port_of_Spain\",\r\n    \"America/Porto_Velho\",\r\n    \"America/Puerto_Rico\",\r\n    \"America/Punta_Arenas\",\r\n    \"America/Rainy_River\",\r\n    \"America/Rankin_Inlet\",\r\n    \"America/Recife\",\r\n    \"America/Regina\",\r\n    \"America/Resolute\",\r\n    \"America/Rio_Branco\",\r\n    \"America/Santarem\",\r\n    \"America/Santiago\",\r\n    \"America/Santo_Domingo\",\r\n    \"America/Sao_Paulo\",\r\n    \"America/Scoresbysund\",\r\n    \"America/Sitka\",\r\n    \"America/St_Johns\",\r\n    \"America/Swift_Current\",\r\n    \"America/Tegucigalpa\",\r\n    \"America/Thule\",\r\n    \"America/Thunder_Bay\",\r\n    \"America/Tijuana\",\r\n    \"America/Toronto\",\r\n    \"America/Vancouver\",\r\n    \"America/Whitehorse\",\r\n    \"America/Winnipeg\",\r\n    \"America/Yakutat\",\r\n    \"America/Yellowknife\",\r\n    \"Antarctica/Casey\",\r\n    \"Antarctica/Davis\",\r\n    \"Antarctica/DumontDUrville\",\r\n    \"Antarctica/Macquarie\",\r\n    \"Antarctica/Mawson\",\r\n    \"Antarctica/Palmer\",\r\n    \"Antarctica/Rothera\",\r\n    \"Antarctica/Syowa\",\r\n    \"Antarctica/Troll\",\r\n    \"Antarctica/Vostok\",\r\n    \"Asia/Almaty\",\r\n    \"Asia/Amman\",\r\n    \"Asia/Anadyr\",\r\n    \"Asia/Aqtau\",\r\n    \"Asia/Aqtobe\",\r\n    \"Asia/Ashgabat\",\r\n    \"Asia/Atyrau\",\r\n    \"Asia/Baghdad\",\r\n    \"Asia/Baku\",\r\n    \"Asia/Bangkok\",\r\n    \"Asia/Barnaul\",\r\n    \"Asia/Beirut\",\r\n    \"Asia/Bishkek\",\r\n    \"Asia/Brunei\",\r\n    \"Asia/Chita\",\r\n    \"Asia/Choibalsan\",\r\n    \"Asia/Colombo\",\r\n    \"Asia/Damascus\",\r\n    \"Asia/Dhaka\",\r\n    \"Asia/Dili\",\r\n    \"Asia/Dubai\",\r\n    \"Asia/Dushanbe\",\r\n    \"Asia/Famagusta\",\r\n    \"Asia/Gaza\",\r\n    \"Asia/Hebron\",\r\n    \"Asia/Ho_Chi_Minh\",\r\n    \"Asia/Hong_Kong\",\r\n    \"Asia/Hovd\",\r\n    \"Asia/Irkutsk\",\r\n    \"Asia/Jakarta\",\r\n    \"Asia/Jayapura\",\r\n    \"Asia/Jerusalem\",\r\n    \"Asia/Kabul\",\r\n    \"Asia/Kamchatka\",\r\n    \"Asia/Karachi\",\r\n    \"Asia/Kathmandu\",\r\n    \"Asia/Khandyga\",\r\n    \"Asia/Kolkata\",\r\n    \"Asia/Krasnoyarsk\",\r\n    \"Asia/Kuala_Lumpur\",\r\n    \"Asia/Kuching\",\r\n    \"Asia/Macau\",\r\n    \"Asia/Magadan\",\r\n    \"Asia/Makassar\",\r\n    \"Asia/Manila\",\r\n    \"Asia/Nicosia\",\r\n    \"Asia/Novokuznetsk\",\r\n    \"Asia/Novosibirsk\",\r\n    \"Asia/Omsk\",\r\n    \"Asia/Oral\",\r\n    \"Asia/Pontianak\",\r\n    \"Asia/Pyongyang\",\r\n    \"Asia/Qatar\",\r\n    \"Asia/Qostanay\",\r\n    \"Asia/Qyzylorda\",\r\n    \"Asia/Riyadh\",\r\n    \"Asia/Sakhalin\",\r\n    \"Asia/Samarkand\",\r\n    \"Asia/Seoul\",\r\n    \"Asia/Shanghai\",\r\n    \"Asia/Singapore\",\r\n    \"Asia/Srednekolymsk\",\r\n    \"Asia/Taipei\",\r\n    \"Asia/Tashkent\",\r\n    \"Asia/Tbilisi\",\r\n    \"Asia/Tehran\",\r\n    \"Asia/Thimphu\",\r\n    \"Asia/Tokyo\",\r\n    \"Asia/Tomsk\",\r\n    \"Asia/Ulaanbaatar\",\r\n    \"Asia/Urumqi\",\r\n    \"Asia/Ust-Nera\",\r\n    \"Asia/Vladivostok\",\r\n    \"Asia/Yakutsk\",\r\n    \"Asia/Yangon\",\r\n    \"Asia/Yekaterinburg\",\r\n    \"Asia/Yerevan\",\r\n    \"Atlantic/Azores\",\r\n    \"Atlantic/Bermuda\",\r\n    \"Atlantic/Canary\",\r\n    \"Atlantic/Cape_Verde\",\r\n    \"Atlantic/Faroe\",\r\n    \"Atlantic/Madeira\",\r\n    \"Atlantic/Reykjavik\",\r\n    \"Atlantic/South_Georgia\",\r\n    \"Atlantic/Stanley\",\r\n    \"Australia/Adelaide\",\r\n    \"Australia/Brisbane\",\r\n    \"Australia/Broken_Hill\",\r\n    \"Australia/Currie\",\r\n    \"Australia/Darwin\",\r\n    \"Australia/Eucla\",\r\n    \"Australia/Hobart\",\r\n    \"Australia/Lindeman\",\r\n    \"Australia/Lord_Howe\",\r\n    \"Australia/Melbourne\",\r\n    \"Australia/Perth\",\r\n    \"Australia/Sydney\",\r\n    \"CET\",\r\n    \"CST6CDT\",\r\n    \"EET\",\r\n    \"EST\",\r\n    \"EST5EDT\",\r\n    \"Etc/GMT\",\r\n    \"Etc/GMT+1\",\r\n    \"Etc/GMT+10\",\r\n    \"Etc/GMT+11\",\r\n    \"Etc/GMT+12\",\r\n    \"Etc/GMT+2\",\r\n    \"Etc/GMT+3\",\r\n    \"Etc/GMT+4\",\r\n    \"Etc/GMT+5\",\r\n    \"Etc/GMT+6\",\r\n    \"Etc/GMT+7\",\r\n    \"Etc/GMT+8\",\r\n    \"Etc/GMT+9\",\r\n    \"Etc/GMT-1\",\r\n    \"Etc/GMT-10\",\r\n    \"Etc/GMT-11\",\r\n    \"Etc/GMT-12\",\r\n    \"Etc/GMT-13\",\r\n    \"Etc/GMT-14\",\r\n    \"Etc/GMT-2\",\r\n    \"Etc/GMT-3\",\r\n    \"Etc/GMT-4\",\r\n    \"Etc/GMT-5\",\r\n    \"Etc/GMT-6\",\r\n    \"Etc/GMT-7\",\r\n    \"Etc/GMT-8\",\r\n    \"Etc/GMT-9\",\r\n    \"Etc/UTC\",\r\n    \"Europe/Amsterdam\",\r\n    \"Europe/Andorra\",\r\n    \"Europe/Astrakhan\",\r\n    \"Europe/Athens\",\r\n    \"Europe/Belgrade\",\r\n    \"Europe/Berlin\",\r\n    \"Europe/Brussels\",\r\n    \"Europe/Bucharest\",\r\n    \"Europe/Budapest\",\r\n    \"Europe/Chisinau\",\r\n    \"Europe/Copenhagen\",\r\n    \"Europe/Dublin\",\r\n    \"Europe/Gibraltar\",\r\n    \"Europe/Helsinki\",\r\n    \"Europe/Istanbul\",\r\n    \"Europe/Kaliningrad\",\r\n    \"Europe/Kiev\",\r\n    \"Europe/Kirov\",\r\n    \"Europe/Lisbon\",\r\n    \"Europe/London\",\r\n    \"Europe/Luxembourg\",\r\n    \"Europe/Madrid\",\r\n    \"Europe/Malta\",\r\n    \"Europe/Minsk\",\r\n    \"Europe/Monaco\",\r\n    \"Europe/Moscow\",\r\n    \"Europe/Oslo\",\r\n    \"Europe/Paris\",\r\n    \"Europe/Prague\",\r\n    \"Europe/Riga\",\r\n    \"Europe/Rome\",\r\n    \"Europe/Samara\",\r\n    \"Europe/Saratov\",\r\n    \"Europe/Simferopol\",\r\n    \"Europe/Sofia\",\r\n    \"Europe/Stockholm\",\r\n    \"Europe/Tallinn\",\r\n    \"Europe/Tirane\",\r\n    \"Europe/Ulyanovsk\",\r\n    \"Europe/Uzhgorod\",\r\n    \"Europe/Vienna\",\r\n    \"Europe/Vilnius\",\r\n    \"Europe/Volgograd\",\r\n    \"Europe/Warsaw\",\r\n    \"Europe/Zaporozhye\",\r\n    \"Europe/Zurich\",\r\n    \"HST\",\r\n    \"Indian/Chagos\",\r\n    \"Indian/Christmas\",\r\n    \"Indian/Cocos\",\r\n    \"Indian/Kerguelen\",\r\n    \"Indian/Mahe\",\r\n    \"Indian/Maldives\",\r\n    \"Indian/Mauritius\",\r\n    \"Indian/Reunion\",\r\n    \"MET\",\r\n    \"MST\",\r\n    \"MST7MDT\",\r\n    \"PST8PDT\",\r\n    \"Pacific/Apia\",\r\n    \"Pacific/Auckland\",\r\n    \"Pacific/Bougainville\",\r\n    \"Pacific/Chatham\",\r\n    \"Pacific/Chuuk\",\r\n    \"Pacific/Easter\",\r\n    \"Pacific/Efate\",\r\n    \"Pacific/Enderbury\",\r\n    \"Pacific/Fakaofo\",\r\n    \"Pacific/Fiji\",\r\n    \"Pacific/Funafuti\",\r\n    \"Pacific/Galapagos\",\r\n    \"Pacific/Gambier\",\r\n    \"Pacific/Guadalcanal\",\r\n    \"Pacific/Guam\",\r\n    \"Pacific/Honolulu\",\r\n    \"Pacific/Kiritimati\",\r\n    \"Pacific/Kosrae\",\r\n    \"Pacific/Kwajalein\",\r\n    \"Pacific/Majuro\",\r\n    \"Pacific/Marquesas\",\r\n    \"Pacific/Nauru\",\r\n    \"Pacific/Niue\",\r\n    \"Pacific/Norfolk\",\r\n    \"Pacific/Noumea\",\r\n    \"Pacific/Pago_Pago\",\r\n    \"Pacific/Palau\",\r\n    \"Pacific/Pitcairn\",\r\n    \"Pacific/Pohnpei\",\r\n    \"Pacific/Port_Moresby\",\r\n    \"Pacific/Rarotonga\",\r\n    \"Pacific/Tahiti\",\r\n    \"Pacific/Tarawa\",\r\n    \"Pacific/Tongatapu\",\r\n    \"Pacific/Wake\",\r\n    \"Pacific/Wallis\",\r\n    \"WET\"\r\n]\r\n\r\nexport const  LOCAL_TIMEZONE = Intl.DateTimeFormat().resolvedOptions().timeZone\r\n","import React, {useRef} from \"react\";\r\nimport {TIMEZONES, LOCAL_TIMEZONE} from \"./worldtime\";\r\n\r\nexport function Form(props) {\r\n    const selector = useRef(null)\r\n\r\n    return (\r\n        <>\r\n            <select ref={ selector }\r\n                    defaultValue={ LOCAL_TIMEZONE }>\r\n            {TIMEZONES.map(str => (\r\n                <option key={str} value={str}>{str}</option>\r\n            ))}\r\n            </select>\r\n\r\n            <button className=\"App-button\"\r\n                    onClick={() => {\r\n                        props.onClickAddTimerHandler(selector.current.value)\r\n                    }}\r\n            >Добавить часы</button>\r\n            <button className=\"App-button\"\r\n                    onClick={() => {\r\n                        props.onSaveDefaultTimezone(selector.current.value)\r\n                    }}\r\n            >Часовой пояс по&nbsp;умолчанию</button>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {LOCAL_TIMEZONE} from \"./worldtime\";\r\n\r\nexport function Clock(props) {\r\n    const defaultTimerClassName = props.nameDefaultZone === props.timezone ? 'clock--default' : ''\r\n    const defaultTileClassName = props.nameDefaultZone === props.timezone ? 'clock-title--default' : ''\r\n\r\n    return (\r\n        <div className={`clock ${defaultTimerClassName}`}>\r\n            <strong className={`clock-title ${defaultTileClassName}`}> {props.timezone || LOCAL_TIMEZONE} </strong>\r\n            <p>{ props.appDate.toLocaleTimeString(\"ru-RU\", {\r\n                timeZone: props.timezone || LOCAL_TIMEZONE })\r\n            }</p>\r\n\r\n            <div className=\"close\" onClick={() => props.onClickRemoveHandler(props.idInstance)}></div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport {Form} from \"./form\";\nimport {Clock} from \"./clock\";\n\nimport './App.css';\n\n{/*<strong>Время есть отношение бытия к небытию.</strong>*/}\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.storageNameZones = 'TIMEZONESSTR'\n    this.storageNameDefaultZone = 'TIMEZONEDEF'\n    this.state = {\n      data: new Map()/*this.init()*/,\n      appDate: new Date(),\n      defaultZone: localStorage.getItem(this.storageNameDefaultZone)\n    }\n\n    this.init = this.init.bind(this)\n    this.onClickAddTimerHandler = this.onClickAddTimerHandler.bind(this)\n    this.onClickRemoveHandler = this.onClickRemoveHandler.bind(this)\n  }\n\n  componentDidMount() {\n    this.init()\n\n    this.timerID = setInterval(\n        () => this.tick(),\n        1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      appDate: new Date()\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Form\n                onClickAddTimerHandler={ this.onClickAddTimerHandler }\n                onSaveDefaultTimezone={ name => {\n                  this.setState({defaultZone: name})\n                  localStorage.setItem(this.storageNameDefaultZone, name)\n                }}\n                nameDefaultZone = {this.state.defaultZone }\n            />\n          </header>\n\n          <div className=\"App-body\">\n            { Array.from(this.state.data.values()).map(hours => (\n                <Clock timezone={ hours.nameTimeZone }\n                       idInstance = { hours.id }\n                       key={ hours.id }\n                       appDate={ this.state.appDate }\n                       onClickRemoveHandler = { this.onClickRemoveHandler }\n                       nameDefaultZone = {this.state.defaultZone }\n                />\n            )) }\n\n          </div>\n        </div>\n    );\n  }\n\n  init() {\n    const storageData = localStorage.getItem(this.storageNameZones)\n    const timezonesArray = storageData ? storageData.split(';') : []\n    const timezonesMap = new Map()\n\n    timezonesArray.forEach( timezone => {\n      if (timezone) {\n        const instance = this.newInstance(timezone)\n        timezonesMap.set(instance.id, instance)\n      }\n    })\n    this.setState({data: timezonesMap})\n  }\n\n  newInstance(timezone) {\n    const idInstance = makeId(10)\n    return {id: idInstance, nameTimeZone: timezone}\n  }\n\n  onClickAddTimerHandler(timezone) {\n    const timezonesMap = this.state.data\n    const instance = this.newInstance( timezone )\n    timezonesMap.set(instance.id, instance)\n\n    this.setState({data: timezonesMap})\n    this.storageSave(timezonesMap)\n  }\n\n  onClickRemoveHandler(id) {\n    const timezonesMap = this.state.data\n    timezonesMap.delete(id)\n\n    this.setState({data: timezonesMap})\n    this.storageSave(timezonesMap)\n  }\n\n  storageSave(timezonesMap) {\n    localStorage.setItem(this.storageNameZones,  Array.from(timezonesMap.values())\n        .map( instance => instance.nameTimeZone ).join(';'))\n  }\n}\n\n// https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nfunction makeId(length) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for ( let i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}